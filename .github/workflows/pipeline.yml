name: DartZone
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    - name: Setup .NET
      uses: ./.github/actions/setup-dotnet
    
    - name: Build .NET Project
      run: |
        DOTNET_BUILD="dotnet build --no-restore -c Release"
        $DOTNET_BUILD ./API/API.csproj
        $DOTNET_BUILD ./Shared/Shared.csproj

  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    - name: Setup .NET
      uses: ./.github/actions/setup-dotnet

    - name: Run Tests
      run: dotnet test --collect:"XPlat Code Coverage"
      continue-on-error: false

    - name: Install ReportGenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: ./Tests/TestResults/**/coverage.cobertura.xml
        flags: unittests
        name: codecov-dotnet
        fail_ci_if_error: true

  # SonarQube Cloud Analysis automatically triggered on push